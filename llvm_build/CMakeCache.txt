# This is the CMakeCache file.
# For build in directory: d:/Projects/rpcs3/llvm_build
# It was generated by CMake: C:/Program Files (x86)/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=http://llvm.org/bugs/

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//ASM_MASM compiler
CMAKE_ASM_MASM_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/ml64.exe

//Flags used by the assembler during all build types.
CMAKE_ASM_MASM_FLAGS:STRING=

//Flags used by the assembler during debug builds.
CMAKE_ASM_MASM_FLAGS_DEBUG:STRING=

//Flags used by the assembler during release minsize builds.
CMAKE_ASM_MASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the assembler during release builds.
CMAKE_ASM_MASM_FLAGS_RELEASE:STRING=

//Flags used by the assembler during Release with Debug Info builds.
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO:STRING=

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=' /machine:x64 '

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files/LLVM

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/link.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=' /machine:x64 '

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=' '

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=' /machine:x64 '

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//Static link Polly into tools
LINK_POLLY_INTO_TOOLS:BOOL=OFF

//Dependencies for target
LLVMAArch64AsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAArch64AsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAArch64CodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAArch64Desc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAArch64Disassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAArch64Info_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAArch64Utils_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMARMAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMARMAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMARMCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMARMDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMARMDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMARMInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMBitReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMBitWriter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCore_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCppBackendCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCppBackendInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMDebugInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMExecutionEngine_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMHexagonAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMHexagonCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMHexagonDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMHexagonInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMIRReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInstCombine_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInstrumentation_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInterpreter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMJIT_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLTO_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLineEditor_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLinker_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCJIT_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMC_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMSP430AsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMSP430CodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMSP430Desc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMSP430Info_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMipsAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMipsAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMipsCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMipsDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMipsDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMipsInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNVPTXAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNVPTXCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNVPTXDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMNVPTXInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMObjCARCOpts_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMObject_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMOption_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPowerPCAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPowerPCAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPowerPCCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPowerPCDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPowerPCDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMPowerPCInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMProfileData_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMR600AsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMR600CodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMR600Desc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMR600Info_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMRuntimeDyld_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMScalarOpts_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSelectionDAG_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSparcAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSparcAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSparcCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSparcDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSparcDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSparcInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSupport_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSystemZAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSystemZAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSystemZCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSystemZDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSystemZDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSystemZInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTableGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTarget_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTransformUtils_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMVectorize_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86AsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86AsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86CodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Desc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Disassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Info_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Utils_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMXCoreAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMXCoreCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMXCoreDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMXCoreDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMXCoreInfo_LIB_DEPENDS:STATIC=

//Append the version control system revision id to LLVM version
LLVM_APPEND_VC_REV:BOOL=OFF

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=D:/Projects/rpcs3/llvm_build

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=OFF

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=OFF

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=OFF

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=OFF

//Number of parallel compiler jobs. 0 means use all processors.
// Default is 0.
LLVM_COMPILER_JOBS:STRING=0

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-pc-win32

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=OFF

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//Compile with C++1y enabled.
LLVM_ENABLE_CXX1Y:BOOL=OFF

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=ON

//Enable embedding timestamp information in build
LLVM_ENABLE_TIMESTAMPS:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=OFF

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Use zlib for compression/decompression if available.
LLVM_ENABLE_ZLIB:BOOL=ON

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Path to clang source directory
LLVM_EXTERNAL_CLANG_SOURCE_DIR:PATH=D:/Projects/rpcs3/llvm/tools/clang

//Path to compiler-rt source directory
LLVM_EXTERNAL_COMPILER_RT_SOURCE_DIR:PATH=D:/Projects/rpcs3/llvm/projects/compiler-rt

//Path to dragonegg source directory
LLVM_EXTERNAL_DRAGONEGG_SOURCE_DIR:PATH=D:/Projects/rpcs3/llvm/projects/dragonegg

//Path to lldb source directory
LLVM_EXTERNAL_LLDB_SOURCE_DIR:PATH=D:/Projects/rpcs3/llvm/tools/lldb

//Path to lld source directory
LLVM_EXTERNAL_LLD_SOURCE_DIR:PATH=D:/Projects/rpcs3/llvm/tools/lld

//Whether to build msbuild as part of LLVM
LLVM_EXTERNAL_MSBUILD_BUILD:BOOL=ON

//Path to msbuild source directory
LLVM_EXTERNAL_MSBUILD_SOURCE_DIR:PATH=D:/Projects/rpcs3/llvm/tools/msbuild

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_HOST_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=x86_64-pc-win32

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=OFF

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=OFF

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=OFF

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=OFF

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=OFF

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv --no-progress-bar

//Path to GnuWin32 tools
LLVM_LIT_TOOLS_DIR:PATH=

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=D:/Projects/rpcs3/llvm

//Native TableGen executable. Saves building one when cross-compiling.
LLVM_TABLEGEN:STRING=llvm-tblgen

//Semicolon-separated list of targets to build, or "all".
LLVM_TARGETS_TO_BUILD:STRING=X86

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//Specify VC++ CRT to use for Debug configurations.
LLVM_USE_CRT_DEBUG:STRING=MDd

//Specify VC++ CRT to use for MinSizeRel configurations.
LLVM_USE_CRT_MINSIZEREL:STRING=MD

//Specify VC++ CRT to use for Release configurations.
LLVM_USE_CRT_RELEASE:STRING=MD

//Specify VC++ CRT to use for RelWithDebInfo configurations.
LLVM_USE_CRT_RELWITHDEBINFO:STRING=MD

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Dependencies for target
LLVMipa_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMipo_LIB_DEPENDS:STATIC=

//Dependencies for the target
LTO_LIB_DEPENDS:STATIC=general;LLVMAArch64CodeGen;general;LLVMAArch64AsmPrinter;general;LLVMAArch64AsmParser;general;LLVMAArch64Desc;general;LLVMAArch64Info;general;LLVMAArch64Disassembler;general;LLVMARMCodeGen;general;LLVMARMAsmPrinter;general;LLVMARMAsmParser;general;LLVMARMDesc;general;LLVMARMInfo;general;LLVMARMDisassembler;general;LLVMCppBackendCodeGen;general;LLVMCppBackendInfo;general;LLVMHexagonCodeGen;general;LLVMHexagonAsmPrinter;general;LLVMHexagonDesc;general;LLVMHexagonInfo;general;LLVMMipsCodeGen;general;LLVMMipsAsmPrinter;general;LLVMMipsAsmParser;general;LLVMMipsDesc;general;LLVMMipsInfo;general;LLVMMipsDisassembler;general;LLVMMSP430CodeGen;general;LLVMMSP430AsmPrinter;general;LLVMMSP430Desc;general;LLVMMSP430Info;general;LLVMNVPTXCodeGen;general;LLVMNVPTXAsmPrinter;general;LLVMNVPTXDesc;general;LLVMNVPTXInfo;general;LLVMPowerPCCodeGen;general;LLVMPowerPCAsmPrinter;general;LLVMPowerPCAsmParser;general;LLVMPowerPCDesc;general;LLVMPowerPCInfo;general;LLVMPowerPCDisassembler;general;LLVMR600CodeGen;general;LLVMR600AsmPrinter;general;LLVMR600Desc;general;LLVMR600Info;general;LLVMSparcCodeGen;general;LLVMSparcAsmPrinter;general;LLVMSparcAsmParser;general;LLVMSparcDesc;general;LLVMSparcInfo;general;LLVMSparcDisassembler;general;LLVMSystemZCodeGen;general;LLVMSystemZAsmPrinter;general;LLVMSystemZAsmParser;general;LLVMSystemZDesc;general;LLVMSystemZInfo;general;LLVMSystemZDisassembler;general;LLVMX86CodeGen;general;LLVMX86AsmPrinter;general;LLVMX86AsmParser;general;LLVMX86Desc;general;LLVMX86Info;general;LLVMX86Disassembler;general;LLVMXCoreCodeGen;general;LLVMXCoreAsmPrinter;general;LLVMXCoreDesc;general;LLVMXCoreInfo;general;LLVMXCoreDisassembler;general;LLVMCore;general;LLVMLTO;general;LLVMMC;general;LLVMMCDisassembler;general;LLVMSupport;

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=C:/Python27/python.exe

//Build LLVM with Polly
WITH_POLLY:BOOL=OFF

//Dependencies for target
gtest_LIB_DEPENDS:STATIC=

//Dependencies for target
gtest_main_LIB_DEPENDS:STATIC=

//Dependencies for target
llvm_headers_do_not_build_LIB_DEPENDS:STATIC=


########################
# INTERNAL cache entries
########################

//Stored GUID
ALL_BUILD_GUID_CMAKE:INTERNAL=681ACAC2-256D-48A1-BCAD-BD607D22BDB4
//ADVANCED property for variable: CMAKE_ASM_MASM_COMPILER
CMAKE_ASM_MASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_MASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS
CMAKE_ASM_MASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_DEBUG
CMAKE_ASM_MASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_MINSIZEREL
CMAKE_ASM_MASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELEASE
CMAKE_ASM_MASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/Projects/rpcs3/llvm_build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=0
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Stored GUID
CMAKE_FOLDER_GUID_CMakePredefinedTargets_GUID_CMAKE:INTERNAL=3B412923-72FF-4220-BCC0-449F5093F79D
//Stored GUID
CMAKE_FOLDER_GUID_Libraries_GUID_CMAKE:INTERNAL=99379135-BF25-4705-85F7-2BD058BB64E7
//Stored GUID
CMAKE_FOLDER_GUID_Loadable modules_GUID_CMAKE:INTERNAL=FDD1CF9D-1C1D-4D42-92FE-CBCA2C36F5C0
//Stored GUID
CMAKE_FOLDER_GUID_Misc_GUID_CMAKE:INTERNAL=4DCC86BE-72E1-420A-B161-C00F82158E56
//Stored GUID
CMAKE_FOLDER_GUID_Tablegenning_GUID_CMAKE:INTERNAL=D6F6953F-87AD-45B4-9392-1BE9C02A9398
//Stored GUID
CMAKE_FOLDER_GUID_Utils_GUID_CMAKE:INTERNAL=814EAE3D-FF1E-4DB4-A09B-C06828B754EA
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 12 2013 Win64
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/Projects/rpcs3/llvm
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=53
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files (x86)/CMake/share/cmake-3.0
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Suppress Warnings that are meant for the author of the CMakeLists.txt
// files.
CMAKE_SUPPRESS_DEVELOPER_WARNINGS:INTERNAL=FALSE
//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Python27/python.exe][v2.7.7()]
//Have symbol backtrace
HAVE_BACKTRACE:INTERNAL=
//Have symbol ceilf
HAVE_CEILF:INTERNAL=1
//Have symbol closedir
HAVE_CLOSEDIR:INTERNAL=
//Have include cxxabi.h
HAVE_CXXABI_H:INTERNAL=
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=1
//Have include dirent.h
HAVE_DIRENT_H:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Test HAVE_ELMCB_PCSTR
HAVE_ELMCB_PCSTR:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include execinfo.h
HAVE_EXECINFO_H:INTERNAL=
//Have symbol exp
HAVE_EXP:INTERNAL=1
//Have symbol exp10
HAVE_EXP10:INTERNAL=
//Have symbol exp2
HAVE_EXP2:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol finite
HAVE_FINITE_IN_IEEEFP_H:INTERNAL=
//Have symbol floorf
HAVE_FLOORF:INTERNAL=1
//Have symbol fmodf
HAVE_FMODF:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=
//Have symbol getcwd
HAVE_GETCWD:INTERNAL=
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=
//Test HAVE_INT64_T
HAVE_INT64_T:INTERNAL=1
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol isatty
HAVE_ISATTY:INTERNAL=
//Have symbol isinf
HAVE_ISINF_IN_CMATH:INTERNAL=
//Have symbol isinf
HAVE_ISINF_IN_MATH_H:INTERNAL=1
//Have symbol isnan
HAVE_ISNAN_IN_CMATH:INTERNAL=
//Have symbol isnan
HAVE_ISNAN_IN_MATH_H:INTERNAL=1
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have symbol log
HAVE_LOG:INTERNAL=1
//Have symbol log10
HAVE_LOG10:INTERNAL=1
//Have symbol log2
HAVE_LOG2:INTERNAL=1
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=
//Have include mach-o/dyld.h
HAVE_MACH_O_DYLD_H:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=
//Have symbol mkdtemp
HAVE_MKDTEMP:INTERNAL=
//Have symbol mkstemp
HAVE_MKSTEMP:INTERNAL=
//Have symbol mktemp
HAVE_MKTEMP:INTERNAL=
//Have include ndir.h
HAVE_NDIR_H:INTERNAL=
//Have symbol nearbyintf
HAVE_NEARBYINTF:INTERNAL=1
//Have symbol opendir
HAVE_OPENDIR:INTERNAL=
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=
//Have symbol pread
HAVE_PREAD:INTERNAL=
//Have symbol srand48
HAVE_RAND48_SRAND48:INTERNAL=
//Have symbol readdir
HAVE_READDIR:INTERNAL=
//Have symbol realpath
HAVE_REALPATH:INTERNAL=
//Have symbol sbrk
HAVE_SBRK:INTERNAL=
//Have symbol setenv
HAVE_SETENV:INTERNAL=
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Have symbol strtoq
HAVE_STRTOQ:INTERNAL=
//Have include sys/dir.h
HAVE_SYS_DIR_H:INTERNAL=
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=
//Have include sys/ndir.h
HAVE_SYS_NDIR_H:INTERNAL=
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=
//Have include sys/wait.h
HAVE_SYS_WAIT_H:INTERNAL=
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=
//Test HAVE_UINT64_T
HAVE_UINT64_T:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Have include utime.h
HAVE_UTIME_H:INTERNAL=
//Test HAVE_U_INT64_T
HAVE_U_INT64_T:INTERNAL=
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=
//Have function _alloca
HAVE__ALLOCA:INTERNAL=
//Have symbol _chsize_s
HAVE__CHSIZE_S:INTERNAL=1
//Have function __alloca
HAVE___ALLOCA:INTERNAL=
//Have function __ashldi3
HAVE___ASHLDI3:INTERNAL=
//Have function __ashrdi3
HAVE___ASHRDI3:INTERNAL=
//Have function __chkstk
HAVE___CHKSTK:INTERNAL=1
//Have function __cmpdi2
HAVE___CMPDI2:INTERNAL=
//Have function __divdi3
HAVE___DIVDI3:INTERNAL=
//Have function __fixdfdi
HAVE___FIXDFDI:INTERNAL=
//Have function __fixsfdi
HAVE___FIXSFDI:INTERNAL=
//Have function __floatdidf
HAVE___FLOATDIDF:INTERNAL=
//Have function __lshrdi3
HAVE___LSHRDI3:INTERNAL=
//Have function __main
HAVE___MAIN:INTERNAL=
//Have function __moddi3
HAVE___MODDI3:INTERNAL=
//Have function __udivdi3
HAVE___UDIVDI3:INTERNAL=
//Have function __umoddi3
HAVE___UMODDI3:INTERNAL=
//Have function ___chkstk
HAVE____CHKSTK:INTERNAL=
//Stored GUID
INSTALL_GUID_CMAKE:INTERNAL=D2E52B9D-6550-43F1-9825-9C62C06B11DA
//Stored GUID
LLVMAnalysis_GUID_CMAKE:INTERNAL=8343C725-5972-409D-B3FD-2A5FAA1D5C5C
//Stored GUID
LLVMAsmParser_GUID_CMAKE:INTERNAL=F9D100BB-16EA-428D-B709-793BE0B511D1
//Stored GUID
LLVMAsmPrinter_GUID_CMAKE:INTERNAL=BBFC51F7-1D4F-43CC-9798-87CCBC33DBB2
//Stored GUID
LLVMBitReader_GUID_CMAKE:INTERNAL=81C46697-F282-48FE-993E-0B9FDA21E9C7
//Stored GUID
LLVMBitWriter_GUID_CMAKE:INTERNAL=751A14B1-0397-4959-A61C-C7ED1E153BFC
//Stored GUID
LLVMCodeGen_GUID_CMAKE:INTERNAL=4E2CE753-5481-4521-87AC-3E02F99405EC
//Stored GUID
LLVMCore_GUID_CMAKE:INTERNAL=E383113C-EA5C-4321-A957-8B421782A070
//Stored GUID
LLVMDebugInfo_GUID_CMAKE:INTERNAL=A8CD982D-DAB9-4345-B230-AFF310FF9D2E
//Stored GUID
LLVMExecutionEngine_GUID_CMAKE:INTERNAL=4BF6E9E0-7ED3-43CC-81E7-337152E30021
//Stored GUID
LLVMHello_GUID_CMAKE:INTERNAL=4312199E-C9CB-471B-886F-A863ACD08B54
//Stored GUID
LLVMIRReader_GUID_CMAKE:INTERNAL=4EC6F015-3FBC-4190-97AC-2D8B2794D04A
//Stored GUID
LLVMInstCombine_GUID_CMAKE:INTERNAL=975BB935-3CF7-4860-A24E-62F39D9DC7EB
//Stored GUID
LLVMInstrumentation_GUID_CMAKE:INTERNAL=40663C95-6697-49FE-A402-0BD373883FFA
//Stored GUID
LLVMInterpreter_GUID_CMAKE:INTERNAL=9C138DA7-1BE7-4DAB-90F3-2F00501C10EE
//Stored GUID
LLVMJIT_GUID_CMAKE:INTERNAL=EC5A2528-F0A7-445E-85CD-F6D7B0D4340E
//Stored GUID
LLVMLTO_GUID_CMAKE:INTERNAL=C52AF063-7610-4E4F-AB94-C2F3B7397324
//Stored GUID
LLVMLineEditor_GUID_CMAKE:INTERNAL=7B7597E6-6BE2-4805-94A2-D0FE30A92151
//Stored GUID
LLVMLinker_GUID_CMAKE:INTERNAL=052C9484-820D-4DCF-A660-C09432AE228A
//Stored GUID
LLVMMCAnalysis_GUID_CMAKE:INTERNAL=13E99356-9DF8-4C6E-BCAC-BD75111DEF35
//Stored GUID
LLVMMCDisassembler_GUID_CMAKE:INTERNAL=CE2F2A88-5AEA-471C-83C1-ABAA767E089B
//Stored GUID
LLVMMCJIT_GUID_CMAKE:INTERNAL=ABCB1FEF-5E07-4FE3-8286-1AAD09D88055
//Stored GUID
LLVMMCParser_GUID_CMAKE:INTERNAL=8DC66021-A50C-412A-84DA-63EF49702C25
//Stored GUID
LLVMMC_GUID_CMAKE:INTERNAL=AAC354E1-A2B7-4FCC-9CB7-500824721D84
//Stored GUID
LLVMObjCARCOpts_GUID_CMAKE:INTERNAL=EE7EC6E9-B173-4C83-95E3-3831E943F6D6
//Stored GUID
LLVMObject_GUID_CMAKE:INTERNAL=4A146CA5-D610-48B2-87DF-0BB03EDEBAAA
//Stored GUID
LLVMOption_GUID_CMAKE:INTERNAL=359B0E09-7A11-458D-82AB-3FE3AACF5A06
//Stored GUID
LLVMProfileData_GUID_CMAKE:INTERNAL=8EA5EBA5-DA91-4E84-BB89-3D9119712E0B
//Stored GUID
LLVMRuntimeDyld_GUID_CMAKE:INTERNAL=1829F961-4B79-414E-8DB9-5062D146B890
//Stored GUID
LLVMScalarOpts_GUID_CMAKE:INTERNAL=060F77BA-DD46-4C4B-899F-D35D768A1A37
//Stored GUID
LLVMSelectionDAG_GUID_CMAKE:INTERNAL=FBCBA6A3-13A5-4212-B88D-87A3EB8789AD
//Stored GUID
LLVMSupport_GUID_CMAKE:INTERNAL=86BAC22E-49CB-4EFB-8591-5CFE12FF2563
//Stored GUID
LLVMTableGen_GUID_CMAKE:INTERNAL=8725F0C9-D5E1-4BAD-B92C-39A77A8ACBDE
//Stored GUID
LLVMTarget_GUID_CMAKE:INTERNAL=9C14B1E9-ADA9-4328-8804-663B52102386
//Stored GUID
LLVMTransformUtils_GUID_CMAKE:INTERNAL=21A9AE70-68DD-43EA-ABC2-CBF14064AD78
//Stored GUID
LLVMVectorize_GUID_CMAKE:INTERNAL=D7B40A9A-44F6-4919-B75F-39E70EC099F9
//Stored GUID
LLVMX86AsmParser_GUID_CMAKE:INTERNAL=E4D3147B-EEC2-4F36-B583-CD679FEF1932
//Stored GUID
LLVMX86AsmPrinter_GUID_CMAKE:INTERNAL=EDB757AF-693F-472D-9BAD-7447449C0231
//Stored GUID
LLVMX86CodeGen_GUID_CMAKE:INTERNAL=022FF3F5-0845-4544-A7E5-C5C352123625
//Stored GUID
LLVMX86Desc_GUID_CMAKE:INTERNAL=28558096-C540-421E-8533-332B6B4EE66F
//Stored GUID
LLVMX86Disassembler_GUID_CMAKE:INTERNAL=9071A7EB-DBA6-4AD2-8FAF-F21A8FFB0E89
//Stored GUID
LLVMX86Info_GUID_CMAKE:INTERNAL=1EAF884F-FECF-4D9B-AD99-34D83E230235
//Stored GUID
LLVMX86Utils_GUID_CMAKE:INTERNAL=EDE64E29-6CBE-4D86-956E-29F0F93B351D
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//STRINGS property for variable: LLVM_USE_CRT_DEBUG
LLVM_USE_CRT_DEBUG-STRINGS:INTERNAL=MD;MDd;MT;MTd
//STRINGS property for variable: LLVM_USE_CRT_MINSIZEREL
LLVM_USE_CRT_MINSIZEREL-STRINGS:INTERNAL=MD;MDd;MT;MTd
//STRINGS property for variable: LLVM_USE_CRT_RELEASE
LLVM_USE_CRT_RELEASE-STRINGS:INTERNAL=MD;MDd;MT;MTd
//STRINGS property for variable: LLVM_USE_CRT_RELWITHDEBINFO
LLVM_USE_CRT_RELWITHDEBINFO-STRINGS:INTERNAL=MD;MDd;MT;MTd
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=
//Stored GUID
LLVMipa_GUID_CMAKE:INTERNAL=E6224F2C-5E3E-40F9-915D-0F5DA7C93A40
//Stored GUID
LLVMipo_GUID_CMAKE:INTERNAL=9A90BEDD-592D-463F-B2DE-5E7914059166
//Stored GUID
PACKAGE_GUID_CMAKE:INTERNAL=924CDF46-DBFE-4464-B179-3E3DD376B4AA
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Stored GUID
SG_Filter_CMake Rules_GUID_CMAKE:INTERNAL=4BF339D9-6A3E-40FA-8E07-6D1290466722
//Stored GUID
SG_Filter_Header Files_GUID_CMAKE:INTERNAL=CCC6067E-E9BD-4269-97A7-9E34A6B00010
//Stored GUID
SG_Filter_Object Files_GUID_CMAKE:INTERNAL=74C39A51-6E43-4C17-974E-1D5ECFB79BEA
//Stored GUID
SG_Filter_Resources_GUID_CMAKE:INTERNAL=389FAD61-1537-472C-8D61-FDE6E0580C27
//Stored GUID
SG_Filter_Source Files_GUID_CMAKE:INTERNAL=1E328BBF-159A-48BC-8C7E-6B6237ADBBFD
//Stored GUID
SG_Filter_TableGen descriptions_GUID_CMAKE:INTERNAL=E9CE204D-7099-4530-BD38-17D112D1F8C8
//Test SUPPORTS_NO_VARIADIC_MACROS_FLAG
SUPPORTS_NO_VARIADIC_MACROS_FLAG:INTERNAL=
//Stored GUID
X86CommonTableGen_GUID_CMAKE:INTERNAL=514E5171-D5DF-4D5E-BF00-988A8BA84214
//Stored GUID
ZERO_CHECK_GUID_CMAKE:INTERNAL=1E9A56BB-21C5-418B-B623-AD2B3F153307
//Stored GUID
intrinsics_gen_GUID_CMAKE:INTERNAL=287EED9A-FBDD-4CB8-85D8-39AEB6245704
//Stored GUID
llvm-tblgen_GUID_CMAKE:INTERNAL=8B29688C-5D8C-412E-85F5-012FBF12B1DE
//Stored GUID
llvm_headers_do_not_build_GUID_CMAKE:INTERNAL=0E01F742-9369-42B0-A2B4-01730D778630

