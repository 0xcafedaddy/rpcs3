# This is the CMakeCache file.
# For build in directory: d:/Projects/rpcs3-experiment/rpcs3/llvm_build
# It was generated by CMake: C:/Program Files (x86)/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=http://llvm.org/bugs/

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//ASM_MASM compiler
CMAKE_ASM_MASM_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/ml64.exe

//Flags used by the assembler during all build types.
CMAKE_ASM_MASM_FLAGS:STRING=

//Flags used by the assembler during debug builds.
CMAKE_ASM_MASM_FLAGS_DEBUG:STRING=

//Flags used by the assembler during release minsize builds.
CMAKE_ASM_MASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the assembler during release builds.
CMAKE_ASM_MASM_FLAGS_RELEASE:STRING=

//Flags used by the assembler during Release with Debug Info builds.
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO:STRING=

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=' /machine:x64 '

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files/LLVM

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/link.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=' /machine:x64 '

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/8.1/bin/x86/rc.exe

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=' '

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=' /machine:x64 '

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//Static link Polly into tools
LINK_POLLY_INTO_TOOLS:BOOL=OFF

//Dependencies for target
LLVMAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMBitReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMBitWriter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCore_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMDebugInfo_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMExecutionEngine_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMIRReader_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInstCombine_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInstrumentation_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMInterpreter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMJIT_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLTO_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLineEditor_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMLinker_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCAnalysis_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCDisassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCJIT_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMCParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMMC_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMObjCARCOpts_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMObject_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMOption_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMProfileData_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMRuntimeDyld_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMScalarOpts_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSelectionDAG_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMSupport_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTableGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTarget_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMTransformUtils_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMVectorize_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86AsmParser_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86AsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86CodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Desc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Disassembler_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Info_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMX86Utils_LIB_DEPENDS:STATIC=

//Append the version control system revision id to LLVM version
LLVM_APPEND_VC_REV:BOOL=OFF

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=D:/Projects/rpcs3-experiment/rpcs3/llvm_build

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=OFF

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=OFF

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=OFF

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=OFF

//Number of parallel compiler jobs. 0 means use all processors.
// Default is 0.
LLVM_COMPILER_JOBS:STRING=0

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-pc-win32

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=OFF

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//Compile with C++1y enabled.
LLVM_ENABLE_CXX1Y:BOOL=OFF

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=ON

//Enable embedding timestamp information in build
LLVM_ENABLE_TIMESTAMPS:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=OFF

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Use zlib for compression/decompression if available.
LLVM_ENABLE_ZLIB:BOOL=ON

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Path to dragonegg source directory
LLVM_EXTERNAL_DRAGONEGG_SOURCE_DIR:PATH=D:/Projects/rpcs3-experiment/rpcs3/llvm/projects/dragonegg

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_HOST_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=x86_64-pc-win32

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=OFF

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=OFF

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=OFF

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=OFF

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=OFF

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv --no-progress-bar

//Path to GnuWin32 tools
LLVM_LIT_TOOLS_DIR:PATH=

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=D:/Projects/rpcs3-experiment/rpcs3/llvm

//Native TableGen executable. Saves building one when cross-compiling.
LLVM_TABLEGEN:STRING=llvm-tblgen

//Semicolon-separated list of targets to build, or "all".
LLVM_TARGETS_TO_BUILD:STRING=X86

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//Specify VC++ CRT to use for Debug configurations.
LLVM_USE_CRT_DEBUG:STRING=MDd

//Specify VC++ CRT to use for Release configurations.
LLVM_USE_CRT_RELEASE:STRING=MD

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Dependencies for target
LLVMipa_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMipo_LIB_DEPENDS:STATIC=

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=C:/Python27/python.exe

//Build LLVM with Polly
WITH_POLLY:BOOL=OFF

//Dependencies for target
llvm_headers_do_not_build_LIB_DEPENDS:STATIC=


########################
# INTERNAL cache entries
########################

//Stored GUID
ALL_BUILD_GUID_CMAKE:INTERNAL=915E4697-EF63-450D-AC00-1A9A16E4DFE2
//ADVANCED property for variable: CMAKE_ASM_MASM_COMPILER
CMAKE_ASM_MASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_MASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS
CMAKE_ASM_MASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_DEBUG
CMAKE_ASM_MASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_MINSIZEREL
CMAKE_ASM_MASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELEASE
CMAKE_ASM_MASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/Projects/rpcs3-experiment/rpcs3/llvm_build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=0
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files (x86)/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Stored GUID
CMAKE_FOLDER_GUID_CMakePredefinedTargets_GUID_CMAKE:INTERNAL=3CD5C246-E8BF-4AD9-A5CE-265B8B016BC9
//Stored GUID
CMAKE_FOLDER_GUID_Libraries_GUID_CMAKE:INTERNAL=6B9FDB94-0086-44ED-8ED4-D4E4DC85A0E9
//Stored GUID
CMAKE_FOLDER_GUID_Loadable modules_GUID_CMAKE:INTERNAL=C5D8C7CE-FE0D-43D3-9C19-743EC625EF8C
//Stored GUID
CMAKE_FOLDER_GUID_Misc_GUID_CMAKE:INTERNAL=D130C055-BD4F-44A6-9477-5ACAB723EA95
//Stored GUID
CMAKE_FOLDER_GUID_Tablegenning_GUID_CMAKE:INTERNAL=4F98B075-A1D9-414E-8C38-BC32BFFDB712
//Stored GUID
CMAKE_FOLDER_GUID_Utils_GUID_CMAKE:INTERNAL=0C7D431B-1310-47AE-A754-0C5413FA6E9F
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 12 2013 Win64
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/Projects/rpcs3-experiment/rpcs3/llvm
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=53
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files (x86)/CMake/share/cmake-3.0
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Python27/python.exe][v2.7.7()]
//Have symbol backtrace
HAVE_BACKTRACE:INTERNAL=
//Have symbol ceilf
HAVE_CEILF:INTERNAL=1
//Have symbol closedir
HAVE_CLOSEDIR:INTERNAL=
//Have include cxxabi.h
HAVE_CXXABI_H:INTERNAL=
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=1
//Have include dirent.h
HAVE_DIRENT_H:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Test HAVE_ELMCB_PCSTR
HAVE_ELMCB_PCSTR:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include execinfo.h
HAVE_EXECINFO_H:INTERNAL=
//Have symbol exp
HAVE_EXP:INTERNAL=1
//Have symbol exp10
HAVE_EXP10:INTERNAL=
//Have symbol exp2
HAVE_EXP2:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol finite
HAVE_FINITE_IN_IEEEFP_H:INTERNAL=
//Have symbol floorf
HAVE_FLOORF:INTERNAL=1
//Have symbol fmodf
HAVE_FMODF:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=
//Have symbol getcwd
HAVE_GETCWD:INTERNAL=
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=
//Test HAVE_INT64_T
HAVE_INT64_T:INTERNAL=1
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol isatty
HAVE_ISATTY:INTERNAL=
//Have symbol isinf
HAVE_ISINF_IN_CMATH:INTERNAL=
//Have symbol isinf
HAVE_ISINF_IN_MATH_H:INTERNAL=1
//Have symbol isnan
HAVE_ISNAN_IN_CMATH:INTERNAL=
//Have symbol isnan
HAVE_ISNAN_IN_MATH_H:INTERNAL=1
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have symbol log
HAVE_LOG:INTERNAL=1
//Have symbol log10
HAVE_LOG10:INTERNAL=1
//Have symbol log2
HAVE_LOG2:INTERNAL=1
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=
//Have include mach-o/dyld.h
HAVE_MACH_O_DYLD_H:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=
//Have symbol mkdtemp
HAVE_MKDTEMP:INTERNAL=
//Have symbol mkstemp
HAVE_MKSTEMP:INTERNAL=
//Have symbol mktemp
HAVE_MKTEMP:INTERNAL=
//Have include ndir.h
HAVE_NDIR_H:INTERNAL=
//Have symbol nearbyintf
HAVE_NEARBYINTF:INTERNAL=1
//Have symbol opendir
HAVE_OPENDIR:INTERNAL=
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=
//Have symbol pread
HAVE_PREAD:INTERNAL=
//Have symbol srand48
HAVE_RAND48_SRAND48:INTERNAL=
//Have symbol readdir
HAVE_READDIR:INTERNAL=
//Have symbol realpath
HAVE_REALPATH:INTERNAL=
//Have symbol sbrk
HAVE_SBRK:INTERNAL=
//Have symbol setenv
HAVE_SETENV:INTERNAL=
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Have symbol strtoq
HAVE_STRTOQ:INTERNAL=
//Have include sys/dir.h
HAVE_SYS_DIR_H:INTERNAL=
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=
//Have include sys/ndir.h
HAVE_SYS_NDIR_H:INTERNAL=
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=
//Have include sys/wait.h
HAVE_SYS_WAIT_H:INTERNAL=
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=
//Test HAVE_UINT64_T
HAVE_UINT64_T:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Have include utime.h
HAVE_UTIME_H:INTERNAL=
//Test HAVE_U_INT64_T
HAVE_U_INT64_T:INTERNAL=
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=
//Have function _alloca
HAVE__ALLOCA:INTERNAL=
//Have symbol _chsize_s
HAVE__CHSIZE_S:INTERNAL=1
//Have function __alloca
HAVE___ALLOCA:INTERNAL=
//Have function __ashldi3
HAVE___ASHLDI3:INTERNAL=
//Have function __ashrdi3
HAVE___ASHRDI3:INTERNAL=
//Have function __chkstk
HAVE___CHKSTK:INTERNAL=1
//Have function __cmpdi2
HAVE___CMPDI2:INTERNAL=
//Have function __divdi3
HAVE___DIVDI3:INTERNAL=
//Have function __fixdfdi
HAVE___FIXDFDI:INTERNAL=
//Have function __fixsfdi
HAVE___FIXSFDI:INTERNAL=
//Have function __floatdidf
HAVE___FLOATDIDF:INTERNAL=
//Have function __lshrdi3
HAVE___LSHRDI3:INTERNAL=
//Have function __main
HAVE___MAIN:INTERNAL=
//Have function __moddi3
HAVE___MODDI3:INTERNAL=
//Have function __udivdi3
HAVE___UDIVDI3:INTERNAL=
//Have function __umoddi3
HAVE___UMODDI3:INTERNAL=
//Have function ___chkstk
HAVE____CHKSTK:INTERNAL=
//Stored GUID
INSTALL_GUID_CMAKE:INTERNAL=BA405F73-03D5-4634-9BCF-16A283E4CED8
//Stored GUID
LLVMAnalysis_GUID_CMAKE:INTERNAL=DC61D4D8-66A3-4579-AAD1-31E189E60D53
//Stored GUID
LLVMAsmParser_GUID_CMAKE:INTERNAL=375A4AA6-813D-4531-A638-6B872ED5EE54
//Stored GUID
LLVMAsmPrinter_GUID_CMAKE:INTERNAL=56E632C5-024D-40E7-A6FF-C5A68B7F9509
//Stored GUID
LLVMBitReader_GUID_CMAKE:INTERNAL=51E429A1-21C1-4018-9D39-8CB4B14B0514
//Stored GUID
LLVMBitWriter_GUID_CMAKE:INTERNAL=A239F463-4DF0-4CC0-BD9D-4F30E26A0B03
//Stored GUID
LLVMCodeGen_GUID_CMAKE:INTERNAL=0D88A34A-ED20-4206-AF86-3047490E1134
//Stored GUID
LLVMCore_GUID_CMAKE:INTERNAL=C3BCF495-B210-455D-B775-052D722BC5C5
//Stored GUID
LLVMDebugInfo_GUID_CMAKE:INTERNAL=F10DE192-EAE1-45D4-B997-284419E8D973
//Stored GUID
LLVMExecutionEngine_GUID_CMAKE:INTERNAL=E67CAF8F-8C79-4B3A-BF69-247EBCFDF760
//Stored GUID
LLVMHello_GUID_CMAKE:INTERNAL=2B8AD1B0-F5F0-41C9-AA9B-E9A69870C787
//Stored GUID
LLVMIRReader_GUID_CMAKE:INTERNAL=6202515A-FA38-4CF1-A710-7CFDA351A912
//Stored GUID
LLVMInstCombine_GUID_CMAKE:INTERNAL=E9B947ED-2839-4198-A9E6-C4A2DFCBAA22
//Stored GUID
LLVMInstrumentation_GUID_CMAKE:INTERNAL=ACA68FB8-0A94-4972-ADCB-F3E799EA5D0C
//Stored GUID
LLVMInterpreter_GUID_CMAKE:INTERNAL=34804700-DAAB-4BA3-92EB-4E9F94FCD3D1
//Stored GUID
LLVMJIT_GUID_CMAKE:INTERNAL=B2D7267A-AB54-4342-AE12-9FBB41A467E2
//Stored GUID
LLVMLTO_GUID_CMAKE:INTERNAL=3993A9B2-990C-4206-9810-F4663C413E2B
//Stored GUID
LLVMLineEditor_GUID_CMAKE:INTERNAL=52BD4A90-4E4D-487E-9DB8-D6F987625F11
//Stored GUID
LLVMLinker_GUID_CMAKE:INTERNAL=530D6430-4C9A-4DCD-9530-F3D5FBA1AF78
//Stored GUID
LLVMMCAnalysis_GUID_CMAKE:INTERNAL=8C5DB0C3-2043-49D0-A438-4CB9E00DEEED
//Stored GUID
LLVMMCDisassembler_GUID_CMAKE:INTERNAL=AF303389-3C5C-41E1-8589-A2417BA2F2A0
//Stored GUID
LLVMMCJIT_GUID_CMAKE:INTERNAL=1F1C0DDB-B60D-4C79-B287-55B2B57DB815
//Stored GUID
LLVMMCParser_GUID_CMAKE:INTERNAL=1994A6C0-FD8E-4FD5-8747-8B094CF8BA9F
//Stored GUID
LLVMMC_GUID_CMAKE:INTERNAL=40B7D80F-613E-423A-BB36-C35D7E61B10C
//Stored GUID
LLVMObjCARCOpts_GUID_CMAKE:INTERNAL=756FCD07-2DE1-4F69-AEE0-9C5DD1D78BF9
//Stored GUID
LLVMObject_GUID_CMAKE:INTERNAL=1E53AEEC-0A85-4939-B82E-AA4AF43827B9
//Stored GUID
LLVMOption_GUID_CMAKE:INTERNAL=02BEF1FA-94EA-4870-9FC2-28C6B18956D3
//Stored GUID
LLVMProfileData_GUID_CMAKE:INTERNAL=0092BC19-58F4-4007-A4D2-C5F6B6D3DCF0
//Stored GUID
LLVMRuntimeDyld_GUID_CMAKE:INTERNAL=D57FC07D-D562-479A-B616-8E2ED10076AA
//Stored GUID
LLVMScalarOpts_GUID_CMAKE:INTERNAL=E6F38EFC-0B8B-4D79-9EEB-F05C302087C2
//Stored GUID
LLVMSelectionDAG_GUID_CMAKE:INTERNAL=673F34AF-68B8-4343-A4EE-FE439EE18BE7
//Stored GUID
LLVMSupport_GUID_CMAKE:INTERNAL=18AF4932-5301-4653-8E79-17C28FC94F42
//Stored GUID
LLVMTableGen_GUID_CMAKE:INTERNAL=25556CA7-A123-4D00-A890-D0313204E491
//Stored GUID
LLVMTarget_GUID_CMAKE:INTERNAL=A26171A0-C2BC-417A-854A-62D7465639E8
//Stored GUID
LLVMTransformUtils_GUID_CMAKE:INTERNAL=97068873-1758-4373-A905-D21A589F7CEB
//Stored GUID
LLVMVectorize_GUID_CMAKE:INTERNAL=B7CF5B97-90CD-4382-B1E8-1B8B8FF1DFF4
//Stored GUID
LLVMX86AsmParser_GUID_CMAKE:INTERNAL=DE52E0A7-1517-49C8-A35C-E991087AD731
//Stored GUID
LLVMX86AsmPrinter_GUID_CMAKE:INTERNAL=912F6530-2501-42AC-BDB7-A32FEFD50A98
//Stored GUID
LLVMX86CodeGen_GUID_CMAKE:INTERNAL=A4A5048B-8EDD-41BB-ACAD-E986D540CD98
//Stored GUID
LLVMX86Desc_GUID_CMAKE:INTERNAL=038CE7EB-B80D-473A-9EE0-30D378CDDCBC
//Stored GUID
LLVMX86Disassembler_GUID_CMAKE:INTERNAL=2C201B42-81BE-47D0-976E-4B84BF4A9FD6
//Stored GUID
LLVMX86Info_GUID_CMAKE:INTERNAL=6AE2591F-C2B7-4946-9583-4C114CF8E5CA
//Stored GUID
LLVMX86Utils_GUID_CMAKE:INTERNAL=5DC547D1-0C85-410D-9771-3A0DD6C91EC3
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//STRINGS property for variable: LLVM_USE_CRT_DEBUG
LLVM_USE_CRT_DEBUG-STRINGS:INTERNAL=MD;MDd;MT;MTd
//STRINGS property for variable: LLVM_USE_CRT_RELEASE
LLVM_USE_CRT_RELEASE-STRINGS:INTERNAL=MD;MDd;MT;MTd
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=
//Stored GUID
LLVMipa_GUID_CMAKE:INTERNAL=FE82E9BF-3127-4F9B-8122-1BAF8C2C7410
//Stored GUID
LLVMipo_GUID_CMAKE:INTERNAL=6BFC4894-F437-4B14-BA4D-D6A4CA6929CA
//Stored GUID
PACKAGE_GUID_CMAKE:INTERNAL=43B8E2C6-E5B7-4C4E-8EFC-216FC221256F
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Stored GUID
SG_Filter_CMake Rules_GUID_CMAKE:INTERNAL=27F60422-EB63-4469-9456-F3FB0402A12B
//Stored GUID
SG_Filter_Header Files_GUID_CMAKE:INTERNAL=F479464E-5854-4287-9D42-A1E6DA632875
//Stored GUID
SG_Filter_Object Files_GUID_CMAKE:INTERNAL=DA25F801-6ADA-4FC3-AE4D-E94FFCF1F484
//Stored GUID
SG_Filter_Resources_GUID_CMAKE:INTERNAL=3CFAAAE1-50F8-48D6-BDF4-4DA5CA2E6A3F
//Stored GUID
SG_Filter_Source Files_GUID_CMAKE:INTERNAL=49044119-F6F3-4751-BBC4-7E7D89AE0A53
//Stored GUID
SG_Filter_TableGen descriptions_GUID_CMAKE:INTERNAL=C5ACBC7B-7F6A-4058-A409-6A9985420FF7
//Test SUPPORTS_NO_VARIADIC_MACROS_FLAG
SUPPORTS_NO_VARIADIC_MACROS_FLAG:INTERNAL=
//Stored GUID
X86CommonTableGen_GUID_CMAKE:INTERNAL=A7A394EA-0F8E-4BD5-9051-B0E1EDE3C954
//Stored GUID
ZERO_CHECK_GUID_CMAKE:INTERNAL=D350ED08-7D56-477A-B812-9E79AAE29E09
//Stored GUID
intrinsics_gen_GUID_CMAKE:INTERNAL=1E777602-37B3-4F1D-BF18-F11C829D5134
//Stored GUID
llvm-tblgen_GUID_CMAKE:INTERNAL=12A07AAC-8C43-4914-8D3C-A148BB18B773
//Stored GUID
llvm_headers_do_not_build_GUID_CMAKE:INTERNAL=EB144326-5AE9-479B-BB5A-6AD695CE87EB

